#!/bin/bash

##########################################################################################################
##                random-programs weather - a simple bash script for getting the weather                ##
##                    Written in 2021 by xf8b <unknownperson102424@pm.me>                               ##
##               To the extent possible under law, the author has dedicated all copyright               ##
##         and related and neighboring rights to this software to the public domain worldwide.          ##
##                          This software is distributed without any warranty.                          ##
##  You should have also received a copy of the CC0 Public Domain Dedication along with this software.  ##
##                   If not, see <https://creativecommons.org/publicdomain/zero/1.0/>.                  ##
##########################################################################################################

# util functions

function error() {
  # echo a red message
  echo "$(tput setaf 1)$*$(tput sgr0)" >&2
  exit 1
}

# the actual code

# constants
USAGE="name:
  weather - a simple bash script for getting the weather

usage:
  weather [options]

options:
  -h              show this help message
  -u url          set a custom url to get the weather from
  -v version      set the version of wttr.in to use
  -l location     set the location of the place to get the weather for
  -a arguments    set the arguments to be passed into wttr.in"
URL_REGEX="^(https?:\/\/)?(v[1-3]\.)?wttr\.in.*$"
VERSION_REGEX="^[1-3]$"

# vars for the curl part
url=""
version="1"
location=""
arguments=""

# get options
while getopts ':hu:v:l:a:' OPTION; do
  case "$OPTION" in
  # help message
  h)
    echo "$USAGE"
    exit 0
    ;;
  # custom url
  u)
    if ! [[ $OPTARG =~ $URL_REGEX ]]; then
      error "error: url '$OPTARG' is not a valid url
error: url must match $URL_REGEX"
    else
      url=$OPTARG
    fi
    ;;
  # version
  v)
    # check if version is valid
    if ! [[ $OPTARG =~ $VERSION_REGEX ]]; then
      error "error: version '$OPTARG' is not a valid version
error: version must match $VERSION_REGEX"
    else
      version=$OPTARG
    fi
    ;;
  # location
  l) location=$OPTARG ;;
  # arguments
  a) arguments=$OPTARG ;;
  # missing argument
  :)
    error "error: missing argument for -$OPTARG
error: use -h to see the help message"
    ;;
  # unknown option
  \?)
    error "error: unknown option: -$OPTARG
error: use -h to see the help message"
    ;;
  esac
done

shift $((OPTIND - 1))

# if no custom url was set then make it using the vars provided
if [[ -z "$url" ]]; then
  url="https://v$version.wttr.in"

  # if a location is specified, use that location
  if [[ -n "$location" ]]; then
    url+="/$location"
  fi

  # if arguments are specified, use those arguments
  if [[ -n "$arguments" ]]; then
    url+="?$arguments"
  fi
fi

# get the result
curl "$url"
